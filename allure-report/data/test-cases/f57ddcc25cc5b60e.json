{
  "uid" : "f57ddcc25cc5b60e",
  "name" : "test_add_group[None:name'3;header-3;footer-3]",
  "fullName" : "test.test_add_group#test_add_group",
  "historyId" : "4497673b8fecbd9d4005cc1dd0af141b",
  "time" : {
    "start" : 1641667767447,
    "stop" : 1641667768512,
    "duration" : 1065
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [325:222;222;...footer-1, ...] == [325:222;222;...footer-1, ...]\n  Left contains one more item: None:name'3;header-3;footer-3\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x000002260ACC07F0>, db = <fixture.db.DbFixture object at 0x000002260ACC0C40>, data_groups = None:name'3;header-3;footer-3, check_ui = False\n\n    def test_add_group(app, db, data_groups, check_ui):\n        group = data_groups\n        with allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(f'When I add group {group} to the list'):\n            app.group.create(group)\n        with allure.step(\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [325:222;222;...footer-1, ...] == [325:222;222;...footer-1, ...]\nE             Left contains one more item: None:name'3;header-3;footer-3\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "stop",
    "time" : {
      "start" : 1641667757034,
      "stop" : 1641667757034,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1641667757034,
      "stop" : 1641667757041,
      "duration" : 7
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "app",
    "time" : {
      "start" : 1641667767410,
      "stop" : 1641667767446,
      "duration" : 36
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "check_ui",
    "time" : {
      "start" : 1641667767447,
      "stop" : 1641667767447,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [325:222;222;...footer-1, ...] == [325:222;222;...footer-1, ...]\n  Left contains one more item: None:name'3;header-3;footer-3\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x000002260ACC07F0>, db = <fixture.db.DbFixture object at 0x000002260ACC0C40>, data_groups = None:name'3;header-3;footer-3, check_ui = False\n\n    def test_add_group(app, db, data_groups, check_ui):\n        group = data_groups\n        with allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with allure.step(f'When I add group {group} to the list'):\n            app.group.create(group)\n        with allure.step(\"Then the new group list is equal to the old list with the added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [325:222;222;...footer-1, ...] == [325:222;222;...footer-1, ...]\nE             Left contains one more item: None:name'3;header-3;footer-3\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1641667767447,
        "stop" : 1641667767448,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "When I add group None:name'3;header-3;footer-3 to the list",
      "time" : {
        "start" : 1641667767448,
        "stop" : 1641667768509,
        "duration" : 1061
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Then the new group list is equal to the old list with the added group",
      "time" : {
        "start" : 1641667768509,
        "stop" : 1641667768511,
        "duration" : 2
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [325:222;222;...footer-1, ...] == [325:222;222;...footer-1, ...]\n  Left contains one more item: None:name'3;header-3;footer-3\n  Use -v to get the full diff\n",
      "statusTrace" : "  File \"D:\\Tatiana\\Documents\\Student\\Software-testing\\Python for testers\\!!!For-me\\projects\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 3
  },
  "afterStages" : [ {
    "name" : "db::fin",
    "time" : {
      "start" : 1641667768855,
      "stop" : 1641667768856,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "stop::fin",
    "time" : {
      "start" : 1641667768856,
      "stop" : 1641667769772,
      "duration" : 916
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "host",
    "value" : "Tata-laptop"
  }, {
    "name" : "thread",
    "value" : "22888-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data_groups",
    "value" : "None:name'3;header-3;footer-3"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f57ddcc25cc5b60e.json",
  "parameterValues" : [ "None:name'3;header-3;footer-3" ]
}